export const prerender = true;---

import type { MarkdownInstance } from 'astro';
import BaseLayout from '../layouts/BaseLayout.astro';
import { SITE_DESCRIPTION } from '../consts';
import path from 'node:path';

type Path = {
  params: { slug: string };
};
export async function getStaticPaths(): Promise<Path[]> {

  const pages: MarkdownInstance<Record<string, any>>[] = await Astro.glob('/src/content/*.{md,mdx}');

  return pages.map((page) => {
    // Extract slug from filename (e.g., 'about.md' -> 'about')
    // Now page.file should be accessible due to correct typing above
    const filename = path.basename(page.file);
    const slug = filename.replace(/\.(md|mdx)$/, '');
    return {
      params: { slug },
      // No props needed anymore
    };
  });
}

// 2. Get the slug from URL parameters
const { slug } = Astro.params;

// 3. Find the corresponding Markdown file again inside the component
// 3. Find the corresponding Markdown file again inside the component, using correct glob typing
const potentialPages = await Astro.glob('/src/content/*.{md,mdx}'); // Let TS infer the type here
const targetFilename = `${slug}.md`;
const targetFilenameMdx = `${slug}.mdx`;

const page = potentialPages.find(p => {
  const filename = path.basename(p.file);
  return filename === targetFilename || filename === targetFilenameMdx;
});

// 4. Handle cases where the entry wasn't found
if (!page) {
  return new Response(null, { status: 404, statusText: 'Not Found' });
}

// 5. Access the Content component and frontmatter directly from the page object.
// Astro.glob provides these directly for markdown files, .render() is not available here.
const { Content, frontmatter } = page;
// Remove duplicate slug declaration below

// 6. Determine title and description
// Capitalize the slug for a fallback title
const fallbackTitle = slug.charAt(0).toUpperCase() + slug.slice(1);
const pageTitle = frontmatter.title || fallbackTitle;
const pageDescription = frontmatter.description || SITE_DESCRIPTION; // Use site default if no description in frontmatter
---
<BaseLayout title={pageTitle} description={pageDescription}>
  <article class="prose dark:prose-invert max-w-none">
    <h1>{pageTitle}</h1>
    <Content />
  </article>
</BaseLayout>
